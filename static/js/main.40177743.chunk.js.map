{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.jsx","components/ContactForm/ContactForm.jsx","redux/contacts/contacts-selectors.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","redux/contacts/contacts-reducer.jsx","redux/store.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","ContactForm","useState","contacts","setContacts","setName","setNumber","dispatch","useDispatch","handleChange","event","currentTarget","value","className","styles","onSubmit","preventDefault","find","contact","toLowerCase","alert","prevState","ContactForm__label","ContactForm__input","type","pattern","title","required","onChange","ContactForm__button","getFilter","state","filter","getVisibleContacts","items","normalizedFilter","includes","ContactList","useSelector","map","ContactList__item","ContactList__button","onClick","Filter","Filter__label","Filter__input","e","target","App","createReducer","_","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","rootReducer","contactsReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.40177743.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList__button\":\"ContactList_ContactList__button__1tJt8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__label\":\"Filter_Filter__label__1zfZ7\",\"Filter__input\":\"Filter_Filter__input__3QdN_\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction('contacts/add', (name, number) => ({\n  payload: { id: uuidv4(), name, number },\n}));\n\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport { addContact, deleteContact, changeFilter };\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nimport { addContact } from '../../redux/contacts/contacts-actions';\n\nfunction ContactForm() {\n  const [contacts, setContacts] = useState([]);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const searchSameName = contacts.find(\n      contact => contact.name.toLowerCase() === contacts.name.toLowerCase(),\n    );\n\n    if (searchSameName) {\n      alert(`${contacts.name} is already in contacts`);\n    } else {\n      setContacts(prevState => [...prevState, contacts]);\n    }\n    dispatch(addContact(name, number));\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleSubmit}>\n      <label className={styles.ContactForm__label}>\n        Name\n        <input\n          className={styles.ContactForm__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.ContactForm__label}>\n        Number\n        <input\n          className={styles.ContactForm__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.ContactForm__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  handleChange: propTypes.func,\n  handleSubmit: propTypes.func,\n  name: propTypes.string,\n  number: propTypes.string,\n};\n\nexport default ContactForm;\n","export const getFilter = state => state.contacts.filter;\nexport const getVisibleContacts = ({ contacts: { items, filter } }) => {\n  const normalizedFilter = filter.toLowerCase();\n\n  return items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nimport { deleteContact } from '../../redux/contacts/contacts-actions';\nimport { getVisibleContacts } from '../../redux/contacts/contacts-selectors';\n\nfunction ContactList() {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <ul className={styles.ContactList}>\n      {contacts.map(contact => (\n        <li className={styles.ContactList__item} key={contact.id}>\n          {contact.name + ': ' + contact.number}\n          <button\n            type=\"button\"\n            className={styles.ContactList__button}\n            name=\"delete\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onDeleteContact: propTypes.func,\n  contacts: propTypes.arrayOf(propTypes.object),\n  contact: propTypes.shape({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }),\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <label className={styles.Filter__label}>\n        Find contacts by name\n        <input\n          className={styles.Filter__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={value}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string,\n  onChangeFilter: propTypes.func,\n};\n\nexport default Filter;\n","import './App.css';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact, changeFilter } from './contacts-actions';\n\nconst defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(defaultContacts, {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import {\n  getDefaultMiddleware,\n  configureStore,\n  combineReducers,\n} from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst persistConfig = {\n  key: 'contacts-list',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n\nimport { store, persistor } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactForm__label\":\"ContactForm_ContactForm__label__jTzOR\",\"ContactForm__input\":\"ContactForm_ContactForm__input__3onxO\",\"ContactForm__button\":\"ContactForm_ContactForm__button__3V1To\"};"],"sourceRoot":""}