{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","hooks/useLocalStorage.jsx","index.js"],"names":["module","exports","ContactForm","onAddContact","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","className","styles","onSubmit","preventDefault","ContactForm__label","ContactForm__input","type","pattern","title","required","onChange","ContactForm__button","ContactList","contacts","onDeleteContact","map","contact","ContactList__item","ContactList__button","onClick","id","Filter","onChangeFilter","Filter__label","Filter__input","target","defaultContacts","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setstate","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","uuidv4","searchSameName","find","alert","prevState","contactID","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea015a6b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactForm__label\":\"ContactForm_ContactForm__label__jTzOR\",\"ContactForm__input\":\"ContactForm_ContactForm__input__3onxO\",\"ContactForm__button\":\"ContactForm_ContactForm__button__3V1To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList__button\":\"ContactList_ContactList__button__1tJt8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Filter__label\":\"Filter_Filter__label__1zfZ7\",\"Filter__input\":\"Filter_Filter__input__3QdN_\"};","import { useState } from 'react';\nimport styles from './ContactForm.module.css';\nimport propTypes from 'prop-types';\n\nexport default function ContactForm({ onAddContact }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onAddContact(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={styles.ContactForm} onSubmit={handleSubmit}>\n      <label className={styles.ContactForm__label}>\n        Name\n        <input\n          className={styles.ContactForm__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={styles.ContactForm__label}>\n        Number\n        <input\n          className={styles.ContactForm__input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n        />\n      </label>\n      <button className={styles.ContactForm__button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  handleChange: propTypes.func,\n  handleSubmit: propTypes.func,\n  name: propTypes.string,\n  number: propTypes.string,\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(contact => (\n      <li className={styles.ContactList__item} key={contact.id}>\n        {contact.name + ': ' + contact.number}\n        <button\n          type=\"button\"\n          className={styles.ContactList__button}\n          name=\"delete\"\n          onClick={() => onDeleteContact(contact.id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  onDeleteContact: propTypes.func,\n  contacts: propTypes.arrayOf(propTypes.object),\n  contact: propTypes.shape({\n    id: propTypes.string.isRequired,\n    name: propTypes.string.isRequired,\n    number: propTypes.string.isRequired,\n  }),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div>\n      <label className={styles.Filter__label}>\n        Find contacts by name\n        <input\n          className={styles.Filter__input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={value}\n          onChange={event => {\n            onChangeFilter(event.target.value);\n          }}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: propTypes.string.isRequired,\n  onChangeFilter: propTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport useLocalStorage from './hooks/useLocalStorage';\n\nconst defaultContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nexport default function App() {\n  const [contacts, setContacts] = useLocalStorage('contacts', defaultContacts);\n\n  const [filter, setFilter] = useState('');\n\n  function addContact(name, number) {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const searchSameName = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n\n    if (searchSameName) {\n      alert(`${name} is already in contacts`);\n    } else {\n      setContacts(prevState => [...prevState, contact]);\n    }\n  }\n\n  function deleteContact(contactID) {\n    setContacts(contacts.filter(({ id }) => id !== contactID));\n  }\n\n  function changeFilter(filter) {\n    setFilter(filter);\n  }\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onAddContact={addContact} />\n\n      <h2>Contacts</h2>\n\n      <Filter value={filter} onChangeFilter={changeFilter} />\n\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n","import { useState, useEffect } from 'react';\n\nexport default function useLocalStorage(key, defaultValue) {\n  const [state, setstate] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n  return [state, setstate];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}